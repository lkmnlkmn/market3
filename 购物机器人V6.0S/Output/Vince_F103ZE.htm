<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\Vince_F103ZE.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\Vince_F103ZE.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Jul 27 14:27:30 2021
<BR><P>
<H3>Maximum Stack Usage =        232 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; path_chose &rArr; get_g_path_auto_shop_with_move_count &rArr; go_to_catch_g_goods_judge_count &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3a]">FSMC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3d]">SPI3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xe.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3c]">TIM5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[40]">TIM6_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[41]">TIM7_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3e]">UART4_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[49]">UART_DMAAbortOnError</a> from stm32f1xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from stm32f1xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from stm32f1xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f103xe.o(.text) referenced from startup_stm32f103xe.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f103xe.o(.text)
 <LI><a href="#[4a]">fputc</a> from bsp_debug_usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[46]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(.text)
</UL>
<P><STRONG><a name="[f4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[60]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[f5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[f6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[f7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[f8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[f9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[fa]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[fb]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[fc]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[fd]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classMaxProb
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classMaxProb
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classMaxProb
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classMaxProb
</UL>

<P><STRONG><a name="[fe]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ff]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[53]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[51]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[59]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[100]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[101]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[102]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DEBUG_USART_Config</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, bsp_debug_usart.o(i.DEBUG_USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = DEBUG_USART_Config &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>DIAL_GPIO_Config</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, bsp_dial.o(i.DIAL_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = DIAL_GPIO_Config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[b7]"></a>DelayMs</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bsp_delay.o(i.DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFunc
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_close_ahead
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_back
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;for_delay
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;near_E
</UL>

<P><STRONG><a name="[8d]"></a>DelayUs</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bsp_delay.o(i.DelayUs))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[65]"></a>Dir_con_gpio_config</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, bsp_motor_control.o(i.Dir_con_gpio_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Dir_con_gpio_config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[83]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 414 bytes, Stack size 16 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>HAL_GPIO_Init</STRONG> (Thumb, 792 bytes, Stack size 36 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAILING_GPIO_Config
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIAL_GPIO_Config
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir_con_gpio_config
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config2
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config
</UL>

<P><STRONG><a name="[ed]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_dial_data
</UL>

<P><STRONG><a name="[ee]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>

<P><STRONG><a name="[6f]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[96]"></a>HAL_IncTick</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[66]"></a>HAL_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>HAL_InitTick</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[69]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[89]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[6b]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[67]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[6e]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 376 bytes, Stack size 16 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[72]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>

<P><STRONG><a name="[71]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[73]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[70]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[74]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1114 bytes, Stack size 24 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCC_OscConfig &rArr; RCC_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[6a]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[76]"></a>HAL_TIM_PWM_ConfigChannel</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_PWM_ConfigChannel &rArr; TIM_OC2_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2_SetConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4_SetConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3_SetConfig
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT2_Config
</UL>

<P><STRONG><a name="[7b]"></a>HAL_TIM_PWM_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_PWM_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_MspInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT2_Config
</UL>

<P><STRONG><a name="[7c]"></a>HAL_TIM_PWM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[7e]"></a>HAL_TIM_PWM_Start</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT2_Config
</UL>

<P><STRONG><a name="[84]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[80]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 326 bytes, Stack size 32 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>HAL_UART_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_USART_Config
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_USART_Config
</UL>

<P><STRONG><a name="[87]"></a>HAL_UART_MspInit</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, bsp_debug_usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[a1]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[8a]"></a>HAL_UART_Transmit</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartWriteBuf
</UL>

<P><STRONG><a name="[a0]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTransmit_IT
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>IIC_Ack</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_iic.o(i.IIC_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Ack
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[8e]"></a>IIC_Init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, bsp_iic.o(i.IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IIC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>IIC_NAck</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, bsp_iic.o(i.IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>

<P><STRONG><a name="[90]"></a>IIC_Read_Byte</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, bsp_iic.o(i.IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_NAck
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Ack
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[91]"></a>IIC_Send_Byte</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bsp_iic.o(i.IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_Send_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeToAddr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[92]"></a>IIC_Start</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bsp_iic.o(i.IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeToAddr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[93]"></a>IIC_Stop</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, bsp_iic.o(i.IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeToAddr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[94]"></a>IIC_Wait_Ack</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bsp_iic.o(i.IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayUs
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeToAddr
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[df]"></a>InitDelay</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, bsp_delay.o(i.InitDelay))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>SERVO_USART_Config</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_usart.o(i.SERVO_USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SERVO_USART_Config &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(.text)
</UL>
<P><STRONG><a name="[f0]"></a>TIM1_SetPWM2_pulse</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bsp_motor_tim.o(i.TIM1_SetPWM2_pulse))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_speed
</UL>

<P><STRONG><a name="[ef]"></a>TIM1_SetPWM_pulse</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, bsp_motor_tim.o(i.TIM1_SetPWM_pulse))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_speed
</UL>

<P><STRONG><a name="[7d]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
</UL>

<P><STRONG><a name="[7f]"></a>TIM_CCxChannelCmd</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f1xx_hal_tim.o(i.TIM_CCxChannelCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CCxChannelCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>

<P><STRONG><a name="[78]"></a>TIM_OC2_SetConfig</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, stm32f1xx_hal_tim.o(i.TIM_OC2_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[9b]"></a>TIMx_Configuration</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_motor_tim.o(i.TIMx_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TIMx_Configuration &rArr; TIM_PWMOUTPUT_Config &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[9d]"></a>TIMx_Configuration2</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_motor_tim.o(i.TIMx_Configuration2))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TIMx_Configuration2 &rArr; TIM_PWMOUTPUT2_Config &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_GPIO_Config2
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMOUTPUT2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
</UL>

<P><STRONG><a name="[9f]"></a>TRAILING_GPIO_Config</STRONG> (Thumb, 584 bytes, Stack size 24 bytes, bsp_trailing.o(i.TRAILING_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TRAILING_GPIO_Config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART1_IRQHandler &rArr; Usart_SendByte &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart_SendByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, stm32f1xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_DMA_Abort_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveHandle
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xe.o(RESET)
</UL>
<P><STRONG><a name="[a2]"></a>Usart_SendByte</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_debug_usart.o(i.Usart_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Usart_SendByte &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[103]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[a3]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receiveHandle
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_close_ahead
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_away_back
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_back
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_g_judge
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_restart
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_mini
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
</UL>

<P><STRONG><a name="[104]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[105]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[106]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[107]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[108]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[ac]"></a>ajust_position</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, bsp_tracers.o(i.ajust_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position_to_g_test_edition
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position_to_g
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position_to_e
</UL>

<P><STRONG><a name="[af]"></a>ajust_position_to_e</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, bsp_tracers.o(i.ajust_position_to_e))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ajust_position_to_e &rArr; ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;near_E
</UL>

<P><STRONG><a name="[b0]"></a>ajust_position_to_g</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bsp_tracers.o(i.ajust_position_to_g))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ajust_position_to_g &rArr; ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
</UL>

<P><STRONG><a name="[b1]"></a>ajust_position_to_g_test_edition</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, bsp_tracers.o(i.ajust_position_to_g_test_edition))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ajust_position_to_g_test_edition &rArr; ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
</UL>

<P><STRONG><a name="[b2]"></a>catch_g_goods_judge</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, bsp_action.o(i.catch_g_goods_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = catch_g_goods_judge &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[b5]"></a>changeFunc</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bsp_wondercam.o(i.changeFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = changeFunc &rArr; currentFunc &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeToAddr
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;currentFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>classIdOfMaxProb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bsp_wondercam.o(i.classIdOfMaxProb))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
</UL>

<P><STRONG><a name="[b9]"></a>classMaxProb</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, bsp_wondercam.o(i.classMaxProb))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = classMaxProb &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
</UL>

<P><STRONG><a name="[b8]"></a>currentFunc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_wondercam.o(i.currentFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = currentFunc &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFunc
</UL>

<P><STRONG><a name="[bc]"></a>first_step</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bsp_trailing.o(i.first_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = first_step &rArr; runActionGroup &rArr; uartWriteBuf &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step_with_car
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_restart
</UL>

<P><STRONG><a name="[c0]"></a>first_step_with_car</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_trailing.o(i.first_step_with_car))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = first_step_with_car &rArr; get_shop_car &rArr; go_to_certain_position &rArr; point_ajust &rArr; go_to_normal_position_no_ajust &rArr; go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_g_judge
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_mini
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop
</UL>

<P><STRONG><a name="[c2]"></a>for_delay</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, bsp_dial.o(i.for_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = for_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
</UL>

<P><STRONG><a name="[4a]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bsp_debug_usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[c3]"></a>get_g_path_auto_shop</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, bsp_path.o(i.get_g_path_auto_shop))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = get_g_path_auto_shop &rArr; go_to_catch_g_goods_judge &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step_with_car
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[c5]"></a>get_g_path_auto_shop_mini</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, bsp_path.o(i.get_g_path_auto_shop_mini))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = get_g_path_auto_shop_mini &rArr; go_to_catch_g_goods_judge &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step_with_car
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[c6]"></a>get_g_path_auto_shop_restart</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, bsp_path.o(i.get_g_path_auto_shop_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = get_g_path_auto_shop_restart &rArr; go_to_catch_g_goods_judge &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[c8]"></a>get_g_path_auto_shop_with_g_judge</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, bsp_path.o(i.get_g_path_auto_shop_with_g_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = get_g_path_auto_shop_with_g_judge &rArr; go_to_catch_g_goods_vison_judge &rArr; visual_identity_judge &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step_with_car
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_vison_judge
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[ca]"></a>get_g_path_auto_shop_with_move_count</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, bsp_path.o(i.get_g_path_auto_shop_with_move_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = get_g_path_auto_shop_with_move_count &rArr; go_to_catch_g_goods_judge_count &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_straight_to_normal_position2
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;for_delay
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step_with_car
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge_count
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[f2]"></a>get_position</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, bsp_tracers.o(i.get_position))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
</UL>

<P><STRONG><a name="[c1]"></a>get_shop_car</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bsp_tracers.o(i.get_shop_car))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = get_shop_car &rArr; go_to_certain_position &rArr; point_ajust &rArr; go_to_normal_position_no_ajust &rArr; go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step_with_car
</UL>

<P><STRONG><a name="[cc]"></a>go_straight_to_normal_position2</STRONG> (Thumb, 386 bytes, Stack size 16 bytes, bsp_tracers.o(i.go_straight_to_normal_position2))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_back
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_normal_position_no_ajust
</UL>

<P><STRONG><a name="[c4]"></a>go_to_catch_g_goods_judge</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, bsp_action.o(i.go_to_catch_g_goods_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = go_to_catch_g_goods_judge &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_restart
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_mini
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop
</UL>

<P><STRONG><a name="[cb]"></a>go_to_catch_g_goods_judge_count</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, bsp_action.o(i.go_to_catch_g_goods_judge_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = go_to_catch_g_goods_judge_count &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
</UL>

<P><STRONG><a name="[c9]"></a>go_to_catch_g_goods_vison_judge</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, bsp_action.o(i.go_to_catch_g_goods_vison_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = go_to_catch_g_goods_vison_judge &rArr; visual_identity_judge &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_g_judge
</UL>

<P><STRONG><a name="[cd]"></a>go_to_certain_position</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bsp_tracers.o(i.go_to_certain_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = go_to_certain_position &rArr; point_ajust &rArr; go_to_normal_position_no_ajust &rArr; go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;point_ajust
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_normal_position_no_ajust
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_main_position
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_corner_position
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position_to_g
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
</UL>

<P><STRONG><a name="[c7]"></a>go_to_certain_position_test_edition</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bsp_tracers.o(i.go_to_certain_position_test_edition))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = go_to_certain_position_test_edition &rArr; point_ajust &rArr; go_to_normal_position_no_ajust &rArr; go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;point_ajust
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_normal_position_no_ajust
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_main_position
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_corner_position
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position_to_g_test_edition
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_restart
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_vison_judge
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge_count
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
</UL>

<P><STRONG><a name="[d3]"></a>go_to_e_corner_position</STRONG> (Thumb, 202 bytes, Stack size 16 bytes, bsp_tracers.o(i.go_to_e_corner_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = go_to_e_corner_position &rArr; near_E &rArr; ajust_position_to_e &rArr; ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;near_E
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_normal_position_no_ajust
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
</UL>

<P><STRONG><a name="[d2]"></a>go_to_e_main_position</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, bsp_tracers.o(i.go_to_e_main_position))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = go_to_e_main_position &rArr; near_E &rArr; ajust_position_to_e &rArr; ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;near_E
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_normal_position_no_ajust
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
</UL>

<P><STRONG><a name="[d4]"></a>go_to_normal_position_no_ajust</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, bsp_tracers.o(i.go_to_normal_position_no_ajust))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = go_to_normal_position_no_ajust &rArr; go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_straight_to_normal_position2
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;point_ajust
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_main_position
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_corner_position
</UL>

<P><STRONG><a name="[d6]"></a>left_E</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bsp_tracers.o(i.left_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = left_E &rArr; motor_control_away_back &rArr; motor_control_Gostraight_back_control &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_away_back
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;point_ajust
</UL>

<P><STRONG><a name="[d8]"></a>left_turn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_motor_control.o(i.left_turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_speed
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_speed
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = main &rArr; path_chose &rArr; get_g_path_auto_shop_with_move_count &rArr; go_to_catch_g_goods_judge_count &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLed
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFunc
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TRAILING_GPIO_Config
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SERVO_USART_Config
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDelay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIAL_GPIO_Config
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DEBUG_USART_Config
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ce]"></a>motor_control_Certain_Step_ahead</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_Certain_Step_ahead))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = motor_control_Certain_Step_ahead &rArr; motor_control_Gostraight_ahead &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_straight_to_normal_position2
</UL>

<P><STRONG><a name="[cf]"></a>motor_control_Certain_Step_back</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_Certain_Step_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = motor_control_Certain_Step_back &rArr; motor_control_Gostraight_back &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_straight_to_normal_position2
</UL>

<P><STRONG><a name="[e3]"></a>motor_control_Gostraight_ahead</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_Gostraight_ahead))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = motor_control_Gostraight_ahead &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
</UL>

<P><STRONG><a name="[be]"></a>motor_control_Gostraight_ahead_control</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_Gostraight_ahead_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = motor_control_Gostraight_ahead_control &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed_control
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_close_ahead
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
</UL>

<P><STRONG><a name="[e4]"></a>motor_control_Gostraight_back</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_Gostraight_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = motor_control_Gostraight_back &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_back
</UL>

<P><STRONG><a name="[e7]"></a>motor_control_Gostraight_back_control</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_Gostraight_back_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = motor_control_Gostraight_back_control &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed_control
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_away_back
</UL>

<P><STRONG><a name="[ad]"></a>motor_control_Left_correct</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, bsp_trailing.o(i.motor_control_Left_correct))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_straight_to_normal_position2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
</UL>

<P><STRONG><a name="[ae]"></a>motor_control_Right_correct</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, bsp_trailing.o(i.motor_control_Right_correct))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = motor_control_Right_correct &rArr; right_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_straight_to_normal_position2
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position
</UL>

<P><STRONG><a name="[d7]"></a>motor_control_away_back</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_away_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = motor_control_away_back &rArr; motor_control_Gostraight_back_control &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back_control
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_E
</UL>

<P><STRONG><a name="[e9]"></a>motor_control_close_ahead</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, bsp_trailing.o(i.motor_control_close_ahead))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = motor_control_close_ahead &rArr; motor_control_Gostraight_ahead_control &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;near_E
</UL>

<P><STRONG><a name="[e0]"></a>motor_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bsp_motor_control.o(i.motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = motor_init &rArr; TIMx_Configuration2 &rArr; TIM_PWMOUTPUT2_Config &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration2
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dir_con_gpio_config
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d5]"></a>near_E</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, bsp_tracers.o(i.near_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = near_E &rArr; ajust_position_to_e &rArr; ajust_position &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_close_ahead
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ajust_position_to_e
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_main_position
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_e_corner_position
</UL>

<P><STRONG><a name="[e2]"></a>path_chose</STRONG> (Thumb, 310 bytes, Stack size 24 bytes, bsp_dial.o(i.path_chose))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = path_chose &rArr; get_g_path_auto_shop_with_move_count &rArr; go_to_catch_g_goods_judge_count &rArr; visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLed
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_dial_data
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;for_delay
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_move_count
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_with_g_judge
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_restart
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_mini
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catch_g_goods_judge
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>point_ajust</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, bsp_tracers.o(i.point_ajust))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = point_ajust &rArr; go_to_normal_position_no_ajust &rArr; go_straight_to_normal_position2 &rArr; motor_control_Left_correct &rArr; left_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_E
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_normal_position_no_ajust
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position_test_edition
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_certain_position
</UL>

<P><STRONG><a name="[eb]"></a>readByte</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bsp_wondercam.o(i.readByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromAddr
</UL>

<P><STRONG><a name="[bb]"></a>readFromAddr</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bsp_wondercam.o(i.readFromAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateResult
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;currentFunc
</UL>

<P><STRONG><a name="[a4]"></a>receiveHandle</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, bsp_lobotservocontroller.o(i.receiveHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = receiveHandle &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>right_turn</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp_motor_control.o(i.right_turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = right_turn &rArr; set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_speed
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_enable
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_speed
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_enable
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
</UL>

<P><STRONG><a name="[b3]"></a>runActionGroup</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bsp_lobotservocontroller.o(i.runActionGroup))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = runActionGroup &rArr; uartWriteBuf &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartWriteBuf
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_shop_car
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_g_path_auto_shop_restart
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_vison_judge
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge_count
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catch_g_goods_judge
</UL>

<P><STRONG><a name="[ea]"></a>scanf_dial_data</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, bsp_dial.o(i.scanf_dial_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = scanf_dial_data
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
</UL>

<P><STRONG><a name="[bd]"></a>scanf_trailing_data</STRONG> (Thumb, 414 bytes, Stack size 8 bytes, bsp_trailing.o(i.scanf_trailing_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = scanf_trailing_data
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_close_ahead
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_away_back
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_back
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed_control
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
</UL>

<P><STRONG><a name="[e1]"></a>setLed</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, bsp_wondercam.o(i.setLed))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = setLed &rArr; writeToAddr &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeToAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;path_chose
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[dd]"></a>set_motor1_direction</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, bsp_motor_control.o(i.set_motor1_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_motor1_direction
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back_control
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
</UL>

<P><STRONG><a name="[d9]"></a>set_motor1_enable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_motor_control.o(i.set_motor1_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_motor1_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back_control
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
</UL>

<P><STRONG><a name="[db]"></a>set_motor1_speed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_motor_control.o(i.set_motor1_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_motor1_speed
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_SetPWM_pulse
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed_control
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
</UL>

<P><STRONG><a name="[de]"></a>set_motor2_direction</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_motor_control.o(i.set_motor2_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_motor2_direction
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back_control
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
</UL>

<P><STRONG><a name="[da]"></a>set_motor2_enable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bsp_motor_control.o(i.set_motor2_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = set_motor2_enable &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back_control
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
</UL>

<P><STRONG><a name="[dc]"></a>set_motor2_speed</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_motor_control.o(i.set_motor2_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_motor2_speed
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_SetPWM2_pulse
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed_control
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pid_motor_speed
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stop
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;right_turn
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;left_turn
</UL>

<P><STRONG><a name="[bf]"></a>stop</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bsp_motor_control.o(i.stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = stop &rArr; set_motor2_speed
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_speed
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_direction
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_speed
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_close_ahead
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_away_back
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Left_correct
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_back
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Right_correct
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Certain_Step_ahead
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;first_step
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;near_E
</UL>

<P><STRONG><a name="[ec]"></a>uartWriteBuf</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bsp_usart.o(i.uartWriteBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uartWriteBuf &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runActionGroup
</UL>

<P><STRONG><a name="[f1]"></a>updateResult</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, bsp_wondercam.o(i.updateResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFromAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity_judge
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;visual_identity
</UL>

<P><STRONG><a name="[b4]"></a>visual_identity</STRONG> (Thumb, 282 bytes, Stack size 88 bytes, bsp_vision.o(i.visual_identity))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = visual_identity &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateResult
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_position
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classMaxProb
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classIdOfMaxProb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge_count
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_judge
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catch_g_goods_judge
</UL>

<P><STRONG><a name="[d0]"></a>visual_identity_judge</STRONG> (Thumb, 314 bytes, Stack size 88 bytes, bsp_vision.o(i.visual_identity_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = visual_identity_judge &rArr; updateResult &rArr; readFromAddr &rArr; readByte &rArr; IIC_Read_Byte &rArr; IIC_NAck
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateResult
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_position
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classMaxProb
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;classIdOfMaxProb
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;go_to_catch_g_goods_vison_judge
</UL>

<P><STRONG><a name="[b6]"></a>writeToAddr</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bsp_wondercam.o(i.writeToAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = writeToAddr &rArr; IIC_Wait_Ack &rArr; IIC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Wait_Ack
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Start
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setLed
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeFunc
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6c]"></a>__NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[6d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[75]"></a>RCC_Delay</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f1xx_hal_rcc.o(i.RCC_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[77]"></a>TIM_OC1_SetConfig</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, stm32f1xx_hal_tim.o(i.TIM_OC1_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[79]"></a>TIM_OC3_SetConfig</STRONG> (Thumb, 112 bytes, Stack size 12 bytes, stm32f1xx_hal_tim.o(i.TIM_OC3_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC3_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[7a]"></a>TIM_OC4_SetConfig</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f1xx_hal_tim.o(i.TIM_OC4_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC4_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>

<P><STRONG><a name="[49]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[82]"></a>UART_EndRxTransfer</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>UART_EndTransmit_IT</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal_uart.o(i.UART_EndTransmit_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_EndTransmit_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>UART_Receive_IT</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Receive_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>UART_SetConfig</STRONG> (Thumb, 412 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[85]"></a>UART_Transmit_IT</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32f1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[97]"></a>SystemClock_Config</STRONG> (Thumb, 96 bytes, Stack size 64 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>pid_motor_speed</STRONG> (Thumb, 862 bytes, Stack size 24 bytes, bsp_trailing.o(i.pid_motor_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pid_motor_speed &rArr; scanf_trailing_data
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_speed
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_speed
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead
</UL>

<P><STRONG><a name="[e6]"></a>pid_motor_speed_control</STRONG> (Thumb, 860 bytes, Stack size 24 bytes, bsp_trailing.o(i.pid_motor_speed_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pid_motor_speed_control &rArr; scanf_trailing_data
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scanf_trailing_data
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor2_speed
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_motor1_speed
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_back_control
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_control_Gostraight_ahead_control
</UL>

<P><STRONG><a name="[99]"></a>TIM_PWMOUTPUT2_Config</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, bsp_motor_tim.o(i.TIM_PWMOUTPUT2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TIM_PWMOUTPUT2_Config &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration2
</UL>

<P><STRONG><a name="[9a]"></a>TIM_PWMOUTPUT_Config</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, bsp_motor_tim.o(i.TIM_PWMOUTPUT_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TIM_PWMOUTPUT_Config &rArr; HAL_TIM_PWM_Start &rArr; TIM_CCxChannelCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Start
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[9c]"></a>TIMx_GPIO_Config</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, bsp_motor_tim.o(i.TIMx_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIMx_GPIO_Config &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration
</UL>

<P><STRONG><a name="[9e]"></a>TIMx_GPIO_Config2</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, bsp_motor_tim.o(i.TIMx_GPIO_Config2))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIMx_GPIO_Config2 &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_Configuration2
</UL>

<P><STRONG><a name="[a7]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a6]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[aa]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[a9]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
